# Define the jobs
# Author: nmaguiar@gmail.com

jobs:
  ## ----------------------
  ## oJob Start/Stop basics
  ## ----------------------

  # Start processing
  - name        : oJob Start
    exec        : >
      log("init");
    
  # Stop processing on shutdown
  - name        : oJob Shutdown
    deps        :
       - oJob Start
    type        : shutdown
    exec        : >
      log("done");

  # Stop processing
  - name        : oJob Stop
    deps        :
       - oJob Start
    exec        : >
      log("done");

  # Exit the current script (include openaf-console)
  - name        : oJob Exit
    exec        : exit(0);

  ## -----
  ## Utils
  ## -----
  
  # Sleep for 5 seconds
  - name        : oJob Sleep 5s
    exec        : sleep(5000); 
 
  # Sleep for 1 second
  - name        : oJob Sleep 1s
    exec        : sleep(1000);
    
  ## ------------
  ## oJob shell
  ## ------------
  
  # Run a shell command
  # - args.visible
  # - args.stdin
  # - args.exitcode
  # - args.stdout
  # - args.stderr
  # - args.directory
  # - args.cmd
  - name        : oJob sh
    help        : >
      This job runs a local shell command and accepts the following args:
        - args.cmd       (string)  The command to execute (or an array of commands)
        - args.quiet     (boolean) Determines if the stdout should be visible or not (default is false)
        - args.directory (string)  Sets the working directory for the command
        - args.stdin     (string)  Provide any stdin needed
        - args.exitcode  (number)  Determines what exitcode should be consider success (default is 0)
        - args.stderr    (string)  Get's set to the stderr
        - args.stdout    (string)  Get's set to the stdout 
        
    exec        : >
      if (isUnDef(args.stdin)) args.stdin = true;
      if (isUnDef(args.exitcode)) args.exitcode = 0;
      if (isArray(args.cmd)) {
        args.stdout = "";
        args.stderr = "";
        for(var i in args.cmd) {
          args.stdout += sh(args.cmd[i], args.stdin, args.timeout, !args.quiet, args.directory);
          args.stderr += __stderr;
          if (__exitcode != args.exitcode) throw "Exit code (for command '" + args.cmd[i] + "': " + __exitcode;
        }
      } else {
        args.stdout = sh(args.cmd, args.stdin, args.timeout, !args.quiet, args.directory);
        args.stderr = __stderr;
        if (__exitcode != args.exitcode) throw "Exit code: " + __exitcode;
      }

  ## ------------
  ## oJob Logging
  ## ------------
  
  # Display oJob Log
  - name        : oJob Show Log
    exec        : >
      log(stringify(
        (isUnDef(args.name) ? 
         ow.oJob.getLogCh().getAll() 
         : 
         $from(ow.oJob.getLogCh().getAll()).equals("name", args.name).select()
        )
      ));
